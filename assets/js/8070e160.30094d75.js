"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2651],{35768:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=n(85893),r=n(11151),i=n(65488),o=n(85162);const s={},l="Track LLM inputs & outputs",c={id:"quickstart",title:"Track LLM inputs & outputs",description:"Try our W&B Inference quickstart to get started without external API keys.",source:"@site/docs/quickstart.md",sourceDirName:".",slug:"/quickstart",permalink:"/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/wandb/weave/blob/master/docs/docs/quickstart.md",tags:[],version:"current",lastUpdatedAt:1758909243e3,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Learn Weave with W&B Inference",permalink:"/quickstart-inference"},next:{title:"Track Application Logic",permalink:"/tutorial-tracing_2"}},u={},d=[{value:"1. Install W&amp;B Weave and create an API Key",id:"1-install-wb-weave-and-create-an-api-key",level:2},{value:"2. Log a trace to a new project",id:"2-log-a-trace-to-a-new-project",level:2},{value:"3. Automated LLM library logging",id:"3-automated-llm-library-logging",level:2},{value:"4. See traces of your application in your project",id:"4-see-traces-of-your-application-in-your-project",level:2},{value:"Next steps",id:"next-steps",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"track-llm-inputs--outputs",children:"Track LLM inputs & outputs"}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsxs)(t.p,{children:["Try our ",(0,a.jsx)(t.a,{href:"/quickstart-inference",children:"W&B Inference quickstart"})," to get started without external API keys."]})}),"\n",(0,a.jsxs)(t.p,{children:["W&B Weave makes it easy to track and evaluate your LLM applications. Follow these steps to track your first call or ",(0,a.jsx)("a",{class:"vertical-align-colab-button",target:"_blank",href:"http://wandb.me/weave_colab",children:(0,a.jsx)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})})]}),"\n",(0,a.jsx)(t.h2,{id:"1-install-wb-weave-and-create-an-api-key",children:"1. Install W&B Weave and create an API Key"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Install weave"})}),"\n",(0,a.jsx)(t.p,{children:"First install the weave library:"}),"\n",(0,a.jsxs)(i.Z,{groupId:"programming-language",queryString:!0,children:[(0,a.jsx)(o.default,{value:"python",label:"Python",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"pip install weave\n"})})}),(0,a.jsx)(o.default,{value:"typescript",label:"TypeScript",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"pnpm install weave\n"})})})]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"Get your API key"})}),"\n",(0,a.jsxs)(t.p,{children:["Then, create a Weights & Biases (W&B) account at ",(0,a.jsx)(t.a,{href:"https://wandb.ai",children:"https://wandb.ai"})," and copy your API key from ",(0,a.jsx)(t.a,{href:"https://wandb.ai/authorize",children:"https://wandb.ai/authorize"})]}),"\n",(0,a.jsx)(t.h2,{id:"2-log-a-trace-to-a-new-project",children:"2. Log a trace to a new project"}),"\n",(0,a.jsx)(t.p,{children:"To get started with tracking your first project with Weave:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Import the ",(0,a.jsx)(t.code,{children:"weave"})," library"]}),"\n",(0,a.jsxs)(t.li,{children:["Call ",(0,a.jsx)(t.code,{children:"weave.init('project-name')"})," to start tracking","\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"You will be prompted to log in with your API key if you are not yet logged in on your machine."}),"\n",(0,a.jsxs)(t.li,{children:["To log to a specific W&B Team name, replace ",(0,a.jsx)(t.code,{children:"project-name"})," with ",(0,a.jsx)(t.code,{children:"team-name/project-name"}),". If you don't specify a W&B team, your default entity is used. To find or update your default entity, refer to ",(0,a.jsx)(t.a,{href:"https://docs.wandb.ai/guides/models/app/settings-page/user-settings/#default-team",children:"User Settings"})," in the W&B Models documentation."]}),"\n"]}),"\n",(0,a.jsx)(t.strong,{children:"NOTE:"})," In automated environments, you can define the environment variable ",(0,a.jsx)(t.code,{children:"WANDB_API_KEY"})," with your API key to login without prompting."]}),"\n",(0,a.jsxs)(t.li,{children:["Add the ",(0,a.jsx)(t.code,{children:"@weave.op()"})," decorator to the python functions you want to track"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["In this example, we're using openai so you will need to add an OpenAI ",(0,a.jsx)(t.a,{href:"https://platform.openai.com/docs/quickstart/step-2-setup-your-api-key",children:"API key"}),"."]}),"\n",(0,a.jsxs)(i.Z,{groupId:"programming-language",queryString:!0,children:[(0,a.jsxs)(o.default,{value:"python",label:"Python",default:!0,children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# highlight-next-line\nimport weave\nfrom openai import OpenAI\n\nclient = OpenAI()\n\n# Weave will track the inputs, outputs and code of this function\n# highlight-next-line\n@weave.op()\ndef extract_dinos(sentence: str) -> dict:\n    response = client.chat.completions.create(\n        model="gpt-4o",\n        messages=[\n            {\n                "role": "system",\n                "content": """In JSON format extract a list of `dinosaurs`, with their `name`,\ntheir `common_name`, and whether its `diet` is a herbivore or carnivore"""\n            },\n            {\n                "role": "user",\n                "content": sentence\n            }\n            ],\n            response_format={ "type": "json_object" }\n        )\n    return response.choices[0].message.content\n\n\n# Initialise the weave project\n# highlight-next-line\nweave.init(\'jurassic-park\')\n\nsentence = """I watched as a Tyrannosaurus rex (T. rex) chased after a Triceratops (Trike), \\\nboth carnivore and herbivore locked in an ancient dance. Meanwhile, a gentle giant \\\nBrachiosaurus (Brachi) calmly munched on treetops, blissfully unaware of the chaos below."""\n\nresult = extract_dinos(sentence)\nprint(result)\n'})}),(0,a.jsxs)(t.p,{children:["When you call the ",(0,a.jsx)(t.code,{children:"extract_dinos"})," function Weave will output a link to view your trace."]})]}),(0,a.jsxs)(o.default,{value:"typescript",label:"TypeScript",children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"import OpenAI from 'openai';\n// highlight-next-line\nimport * as weave from 'weave';\n\n// highlight-next-line\nconst openai = new OpenAI();\n\nasync function extractDinos(input: string) {\n  const response = await openai.chat.completions.create({\n    model: 'gpt-4o',\n    messages: [\n      {\n        role: 'user',\n        content: `In JSON format extract a list of 'dinosaurs', with their 'name', their 'common_name', and whether its 'diet' is a herbivore or carnivore: ${input}`,\n      },\n    ],\n  });\n  return response.choices[0].message.content;\n}\n// highlight-next-line\nconst extractDinosOp = weave.op(extractDinos);\n\nasync function main() {\n  // highlight-next-line\n  await weave.init('examples');\n  const result = await extractDinosOp(\n    'I watched as a Tyrannosaurus rex (T. rex) chased after a Triceratops (Trike), both carnivore and herbivore locked in an ancient dance. Meanwhile, a gentle giant Brachiosaurus (Brachi) calmly munched on treetops, blissfully unaware of the chaos below.'\n  );\n  console.log(result);\n}\n\nmain();\n\n"})}),(0,a.jsxs)(t.p,{children:["When you call the ",(0,a.jsx)(t.code,{children:"extractDinos"})," function Weave will output a link to view your trace."]})]})]}),"\n",(0,a.jsx)(t.h2,{id:"3-automated-llm-library-logging",children:"3. Automated LLM library logging"}),"\n",(0,a.jsxs)(t.p,{children:["Calls made to OpenAI, Anthropic and ",(0,a.jsx)(t.a,{href:"/guides/integrations/",children:"many more LLM libraries"})," are automatically tracked with Weave, with ",(0,a.jsx)(t.strong,{children:"LLM metadata"}),", ",(0,a.jsx)(t.strong,{children:"token usage"})," and ",(0,a.jsx)(t.strong,{children:"cost"})," being logged automatically. If your LLM library isn't currently one of our integrations you can track calls to other LLMs libraries or frameworks easily by wrapping them with ",(0,a.jsx)(t.code,{children:"@weave.op()"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"4-see-traces-of-your-application-in-your-project",children:"4. See traces of your application in your project"}),"\n",(0,a.jsx)(t.p,{children:"\ud83c\udf89 Congrats! Now, every time you call this function, Weave will automatically capture the input & output data and log any changes made to the code."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Weave Trace Outputs 1",src:n(21407).Z+"",width:"1614",height:"1342"})}),"\n",(0,a.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,a.jsxs)(t.p,{children:["Now that you've seen Weave in action, try the W&B Inference service for easier experimentation. ",(0,a.jsx)(t.a,{href:"/quickstart-inference",children:"Get Started with W&B Inference"})," - no need to manage multiple API keys, and free credits are included."]}),"\n",(0,a.jsx)(t.p,{children:"Continue learning:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"/tutorial-tracing_2",children:"Track flows and app metadata"})," - Dive deeper into tracing complex applications"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"/tutorial-eval",children:"Build evaluations"})," - Learn systematic model evaluation"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"/guides/integrations/",children:"Explore integrations"})," - Connect more LLM providers and frameworks"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},85162:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});n(67294);var a=n(90512);const r={tabItem:"tabItem_Ymn6"};var i=n(85893);function o(e){let{children:t,hidden:n,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,o),hidden:n,children:t})}},65488:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(67294),r=n(90512),i=n(12466),o=n(70989),s=n(72389);const l={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var c=n(85893);function u(e){let{className:t,block:n,selectedValue:a,selectValue:o,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),h=e=>{const t=e.currentTarget,n=u.indexOf(t),r=s[n].value;r!==a&&(d(t),o(r))},p=e=>{let t=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return(0,c.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t),children:s.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,c.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>u.push(e),onKeyDown:p,onClick:h,...i,className:(0,r.Z)("tabs__item",l.tabItem,i?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function d(e){let{lazy:t,children:n,selectedValue:r}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,c.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function h(e){const t=(0,o.Y)(e);return(0,c.jsxs)("div",{className:(0,r.Z)("tabs-container",l.tabList),children:[(0,c.jsx)(u,{...t,...e}),(0,c.jsx)(d,{...t,...e})]})}function p(e){const t=(0,s.default)();return(0,c.jsx)(h,{...e,children:(0,o.h)(e.children)},String(t))}},70989:(e,t,n)=>{n.d(t,{Y:()=>p,h:()=>c});var a=n(67294),r=n(16550),i=n(20469),o=n(91980),s=n(67392),l=n(20812);function c(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return c(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const i=(0,r.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(i.location.search);t.set(s,e),i.replace({...i.location,search:t.toString()})}),[s,i])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=u(e),[s,c]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[p,m]=h({queryString:n,groupId:r}),[g,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,l.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:r}),x=(()=>{const e=p??g;return d({value:e,tabValues:o})?e:null})();(0,i.Z)((()=>{x&&c(x)}),[x]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),m(e),f(e)}),[m,f,o]),tabValues:o}}},21407:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/tutorial_trace_1-1a8b458af91f7d72f6568e3b0217fefe.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>o});var a=n(67294);const r={},i=a.createContext(r);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);