"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4849],{80787:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>r});var o=n(85893),s=n(11151);const t={},d="Video Support",l={id:"guides/tracking/video",title:"Video Support",description:"Weave automatically logs videos using moviepy. This allows you to pass video inputs and outputs to traced functions, and Weave will automatically handle uploading and storing video data.",source:"@site/docs/guides/tracking/video.md",sourceDirName:"guides/tracking",slug:"/guides/tracking/video",permalink:"/guides/tracking/video",draft:!1,unlisted:!1,editUrl:"https://github.com/wandb/weave/blob/master/docs/docs/guides/tracking/video.md",tags:[],version:"current",lastUpdatedAt:1749652482e3,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Send OpenTelemetry Traces",permalink:"/guides/tracking/otel"},next:{title:"App Versioning",permalink:"/tutorial-weave_models"}},a={},r=[{value:"Usage prerequisites",id:"usage-prerequisites",level:2},{value:"Supported video types",id:"supported-video-types",level:2},{value:"Direct upload of file-based clips",id:"direct-upload-of-file-based-clips",level:3},{value:"In-memory clip support",id:"in-memory-clip-support",level:3},{value:"Example: Trace a video function",id:"example-trace-a-video-function",level:2}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h1,{id:"video-support",children:"Video Support"}),"\n",(0,o.jsxs)(i.p,{children:["Weave automatically logs videos using ",(0,o.jsx)(i.a,{href:"https://zulko.github.io/moviepy/",children:(0,o.jsx)(i.code,{children:"moviepy"})}),". This allows you to pass video inputs and outputs to traced functions, and Weave will automatically handle uploading and storing video data."]}),"\n",(0,o.jsx)(i.admonition,{type:"note",children:(0,o.jsx)(i.p,{children:"Video support is currently only available in Python."})}),"\n",(0,o.jsx)(i.h2,{id:"usage-prerequisites",children:"Usage prerequisites"}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:["Install ",(0,o.jsx)(i.code,{children:"weave"})," and ",(0,o.jsx)(i.code,{children:"moviepy==1.0.3"}),"."]}),"\n",(0,o.jsx)(i.li,{children:"Create a W&B account."}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"supported-video-types",children:"Supported video types"}),"\n",(0,o.jsxs)(i.p,{children:["Weave recognizes ",(0,o.jsx)(i.code,{children:"moviepy"})," video clip objects, such as:"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:["A ",(0,o.jsx)(i.code,{children:"VideoFileClip"})," loaded from a video file"]}),"\n",(0,o.jsxs)(i.li,{children:["In-memory clips like ",(0,o.jsx)(i.code,{children:"ImageClip"}),", ",(0,o.jsx)(i.code,{children:"ColorClip"}),", and ",(0,o.jsx)(i.code,{children:"TextClip"})]}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"direct-upload-of-file-based-clips",children:"Direct upload of file-based clips"}),"\n",(0,o.jsxs)(i.p,{children:["If your clip is a ",(0,o.jsx)(i.code,{children:"VideoFileClip"})," and has a valid filename with a supported extension, Weave will upload the file directly."]}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.strong,{children:"Supported file extensions:"})}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.code,{children:".mp4"})}),"\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.code,{children:".webm"})}),"\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.code,{children:".gif"})}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"in-memory-clip-support",children:"In-memory clip support"}),"\n",(0,o.jsxs)(i.p,{children:["If the video object is in memory (no file on disk), Weave will encode it as an ",(0,o.jsx)(i.code,{children:".mp4"})," file and handle the upload automatically. This applies to clips of the following type:"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.code,{children:"ImageClip"})}),"\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.code,{children:"ColorClip"})}),"\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.code,{children:"TextClip"})}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"example-trace-a-video-function",children:"Example: Trace a video function"}),"\n",(0,o.jsx)(i.p,{children:"The following code sample demonstrates how to trace a video processing function in Weave. The code sample:"}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:["Initializes a Weave project ",(0,o.jsx)(i.code,{children:"video-test"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:["Defines a ",(0,o.jsx)(i.code,{children:"get_video"})," function tracked as a ",(0,o.jsx)(i.code,{children:"weave.op"})," that extracts a 1 second subclip of the loaded ",(0,o.jsx)(i.code,{children:"VideoFileClip"})," as a ",(0,o.jsx)(i.code,{children:"VideoClip"}),"."]}),"\n",(0,o.jsx)(i.li,{children:"Uploads and tracks the clip in Weave."}),"\n",(0,o.jsx)(i.li,{children:"Automatically generates a dummy MP4 video if none is found."}),"\n"]}),"\n",(0,o.jsx)(i.admonition,{type:"important",children:(0,o.jsxs)(i.p,{children:["To avoid thread-safety issues, always pass the path to ",(0,o.jsx)(i.code,{children:"VideoFileClip"})," objects instead of creating them outside the Weave ",(0,o.jsx)(i.code,{children:"op"}),"."]})}),"\n",(0,o.jsxs)(i.p,{children:["Before you use the following code snippet, complete the ",(0,o.jsx)(i.a,{href:"#usage-prerequisites",children:"usage prerequisites"}),"."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:'import os\nimport weave\nfrom moviepy.editor import VideoFileClip, ColorClip, VideoClip\n\n# Update to your project name, or create a new project named \'video-test\'\nweave.init(\'video-test\')\n\n@weave.op\ndef get_video(clip: VideoFileClip) -> VideoClip:\n    """Process a video by path rather than by passing the clip directly.\n\n    This ensures that the VideoFileClip is created and managed within the\n    Weave op\'s thread context, avoiding thread-safety issues.\n    """\n    new_clip = clip.subclip(0, 1)\n    return new_clip\n\nif __name__ == "__main__":\n    os.makedirs("videos", exist_ok=True)\n\n    # Update the path to point to your MP4 file\n    video_path = \'./videos/example.mp4\'\n\n    # Generate a dummy video if it doesn\'t exist\n    # Dummy video contents: A red square that displays for 5 seconds\n    if not os.path.isfile(video_path):\n        print("No video found. Creating dummy video...")\n        dummy_clip = ColorClip(size=(640, 480), color=(255, 0, 0), duration=5)\n        dummy_clip.write_videofile(video_path, fps=24)\n\n    clip = VideoFileClip(video_path, has_mask=False, audio=True)\n    get_video(clip) \n'})}),"\n",(0,o.jsxs)(i.p,{children:["When the code sample runs successfully, you can view your video by clicking the link in the ",(0,o.jsx)(i.strong,{children:"Traces"})," table of your project."]}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"A trace of a video processing function in the Traces table.",src:n(13546).Z+"",width:"2766",height:"582"})}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"An MP4 video uploaded to Weave, viewed in the Traces popout.",src:n(32871).Z+"",width:"720",height:"323"})})]})}function p(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},32871:(e,i,n)=>{n.d(i,{Z:()=>o});const o=n.p+"assets/images/video-trace-popout-79dc8f9168ca3a41e4be8d95399d9b52.png"},13546:(e,i,n)=>{n.d(i,{Z:()=>o});const o=n.p+"assets/images/video-trace-b0e6da49e8619780ad2411706e441766.png"},11151:(e,i,n)=>{n.d(i,{Z:()=>l,a:()=>d});var o=n(67294);const s={},t=o.createContext(s);function d(e){const i=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(t.Provider,{value:i},e.children)}}}]);