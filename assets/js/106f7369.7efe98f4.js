"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2582],{61183:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=r(85893),i=r(11151);r(65488),r(85162);const a={},s="Verifiers",l={id:"guides/integrations/verifiers",title:"Verifiers",description:"Verifiers is a library of modular components for creating Reinforcement Learning (RL) environments and training LLM agents. Environments built with Verifiers can serve as LLM evaluations, synthetic data pipelines, agent harnesses for any OpenAI\u2011compatible endpoint, and RL training.",source:"@site/docs/guides/integrations/verifiers.md",sourceDirName:"guides/integrations",slug:"/guides/integrations/verifiers",permalink:"/guides/integrations/verifiers",draft:!1,unlisted:!1,editUrl:"https://github.com/wandb/weave/blob/master/docs/docs/guides/integrations/verifiers.md",tags:[],version:"current",lastUpdatedAt:1758909243e3,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"TypeScript SDK: Third-Party Integration Guide",permalink:"/guides/integrations/js"},next:{title:"Integrations",permalink:"/guides/integrations/"}},o={},c=[{value:"Getting started",id:"getting-started",level:2},{value:"Trace rollouts and evaluate",id:"trace-rollouts-and-evaluate",level:3},{value:"Fine-tune a model with experiment tracking and tracing",id:"fine-tune-a-model-with-experiment-tracking-and-tracing",level:3},{value:"See also",id:"see-also",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"verifiers",children:"Verifiers"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/willccbb/verifiers",children:"Verifiers"})," is a library of modular components for creating Reinforcement Learning (RL) environments and training LLM agents. Environments built with Verifiers can serve as LLM evaluations, synthetic data pipelines, agent harnesses for any OpenAI\u2011compatible endpoint, and RL training."]}),"\n",(0,t.jsx)(n.p,{children:"Along with using W&B to record your training metrics, you can integrate Weave with your Verifiers RL workflows to gain observability into how your model performs during training. Weave records inputs, outputs, and timestamps for each step so you can inspect how data transforms at every turn, debug complex multi\u2011round conversations, and optimize training results."}),"\n",(0,t.jsx)(n.p,{children:"You can also use Weave and Verifiers together to perform evaluations."}),"\n",(0,t.jsx)(n.p,{children:"This guide shows you how to install Verifiers, W&B, and Weave, and provides two examples of how to use Verifiers with Weave and W&B."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"verifiers wandb run page",src:r(94618).Z+"",width:"960",height:"518"})}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,t.jsxs)(n.p,{children:["To integrate Verifiers with Weave, start by installing the Verifiers library using ",(0,t.jsx)(n.code,{children:"uv"})," (",(0,t.jsx)(n.a,{href:"https://github.com/willccbb/verifiers?tab=readme-ov-file#setup",children:"recommended by the library's authors"}),"). Use one of the following commands to install the library:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Installs core library for local development and API-based models\nuv add verifiers\n\n# Installs full version of library with all optional dependencies, including PyTorch and GPU support\nuv add 'verifiers[all]' && uv pip install flash-attn --no-build-isolation\n\n# Installs latest version of library directly from GitHub, including latest unreleased features and fixes\nuv add verifiers @ git+https://github.com/willccbb/verifiers.git\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then install Weave and W&B:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"uv pip install weave wandb\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Weave enables ",(0,t.jsx)(n.a,{href:"/guides/integrations/",children:"implicit patching"})," for the library by default. This allows you to use Weave with Verifiers without requiring explicit call patch functions."]}),"\n",(0,t.jsx)(n.h3,{id:"trace-rollouts-and-evaluate",children:"Trace rollouts and evaluate"}),"\n",(0,t.jsx)(n.p,{children:"Once you've installed the necessary libraries, you can use Weave and Verifiers together to trace calls and run evaluations."}),"\n",(0,t.jsxs)(n.p,{children:["The following example script demonstrates how to run an evaluation with Verifiers and log the results to Weave. The script tests the LLM's ability to solve math problems using the ",(0,t.jsx)(n.a,{href:"https://huggingface.co/datasets/openai/gsm8k",children:"GSM8K dataset"}),". It asks GPT-4 to solve two math problems, extracts the numerical value from each response, and then grades the attempt using Verifiers as an evaluation framework."]}),"\n",(0,t.jsx)(n.p,{children:"Run the example and inspect the results in Weave:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import os\nfrom openai import OpenAI\nimport verifiers as vf\nimport weave\n\nos.environ["OPENAI_API_KEY"] = "<YOUR-OPENAI-API-KEY>"\n\n# Initialize Weave\nweave.init("verifiers_demo")\n\n# Minimal single-turn environment\ndataset = vf.load_example_dataset("gsm8k", split="train").select(range(2))\nparser = vf.ThinkParser()\n\ndef correct_answer(parser, completion, answer):\n    parsed = parser.parse_answer(completion) or ""\n    return 1.0 if parsed.strip() == answer.strip() else 0.0\n\nrubric = vf.Rubric(funcs=[correct_answer, parser.get_format_reward_func()], weights=[1.0, 0.2])\n\nenv = vf.SingleTurnEnv(\n    dataset=dataset,\n    system_prompt="Think step-by-step, then answer.",\n    parser=parser,\n    rubric=rubric,\n)\n\nclient = OpenAI()\nresults = env.evaluate(\n    client, "gpt-4.1-mini", num_examples=2, rollouts_per_example=2, max_concurrent=8\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"fine-tune-a-model-with-experiment-tracking-and-tracing",children:"Fine-tune a model with experiment tracking and tracing"}),"\n",(0,t.jsx)(n.p,{children:"Weave can be a powerful tool in your RL fine\u2011tuning workflows by providing insight into how your models are performing during training. When used alongside W&B, you get comprehensive observability: W&B tracks training metrics and performance charts, while Weave captures detailed traces of each interaction during the training process."}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"verifiers"})," repository includes ready\u2011to\u2011run ",(0,t.jsx)(n.a,{href:"https://github.com/willccbb/verifiers/tree/main/examples/grpo",children:"examples"})," to help you get started."]}),"\n",(0,t.jsx)(n.p,{children:"The following example RL training pipeline runs a local inference server and trains a model using the GSM8K dataset. The model responds with answers to the math problems and the training loop scores the output and updates the model accordingly. W&B logs the training metrics, like loss, reward, and accuracy, while Weave captures the input, output, reasoning, and scoring."}),"\n",(0,t.jsx)(n.p,{children:"To use this pipeline:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Install the framework from the source. The following commands install the Verifiers library from GitHub and the necessary dependencies:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/willccbb/verifiers\ncd verifiers\nuv sync --all-extras && uv pip install flash-attn --no-build-isolation\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Install an off-the-shelf environment. The following command installs the pre-configured GSM8K training environment:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"vf-install gsm8k --from-repo\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["Train your model. The following commands launch the inference server and training loop, respectively. This example workflow sets ",(0,t.jsx)(n.code,{children:"report_to=wandb"})," by default, so you don't need to call ",(0,t.jsx)(n.code,{children:"wandb.init"})," separately. You'll be prompted to authenticate this machine to log metrics to W&B."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Runs inference server\nCUDA_VISIBLE_DEVICES=0 vf-vllm --model willcb/Qwen3-0.6B --enforce-eager --disable-log-requests\n\n# Runs training loop\nCUDA_VISIBLE_DEVICES=1 accelerate launch --num-processes 1 --config-file configs/zero3.yaml examples/grpo/train_gsm8k.py\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"We successfully tested this example on 2xH100s and set the following environment variables for increased stability:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# In BOTH shells (server and trainer) before launch\nexport NCCL_CUMEM_ENABLE=0\nexport NCCL_CUMEM_HOST_ENABLE=0\n"})}),(0,t.jsx)(n.p,{children:"These variables disable CUDA Unified Memory (CuMem) for device memory allocations."})]}),"\n",(0,t.jsxs)(n.p,{children:["Once training begins, you can ",(0,t.jsx)(n.a,{href:"../../guides/tools/weave-in-workspaces",children:"view the traces"})," logged during your run in the UI."]}),"\n",(0,t.jsxs)(n.p,{children:["Traces omit ",(0,t.jsx)(n.code,{children:"logprobs"})," for the ",(0,t.jsx)(n.code,{children:"Environment.a_generate"})," and ",(0,t.jsx)(n.code,{children:"Rubric.score_rollouts"})," methods. This keeps payloads small while leaving the originals intact for training."]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,t.jsxs)(n.p,{children:["Verifiers has first\u2011class integration with W&B Models. See ",(0,t.jsx)(n.a,{href:"https://verifiers.readthedocs.io/en/latest/training.html#monitoring",children:"Monitoring"})," to learn more."]})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},85162:(e,n,r)=>{r.r(n),r.d(n,{default:()=>s});r(67294);var t=r(90512);const i={tabItem:"tabItem_Ymn6"};var a=r(85893);function s(e){let{children:n,hidden:r,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.Z)(i.tabItem,s),hidden:r,children:n})}},65488:(e,n,r)=>{r.d(n,{Z:()=>p});var t=r(67294),i=r(90512),a=r(12466),s=r(70989),l=r(72389);const o={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var c=r(85893);function u(e){let{className:n,block:r,selectedValue:t,selectValue:s,tabValues:l}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.o5)(),h=e=>{const n=e.currentTarget,r=u.indexOf(n),i=l[r].value;i!==t&&(d(n),s(i))},p=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const r=u.indexOf(e.currentTarget)+1;n=u[r]??u[0];break}case"ArrowLeft":{const r=u.indexOf(e.currentTarget)-1;n=u[r]??u[u.length-1];break}}n?.focus()};return(0,c.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},n),children:l.map((e=>{let{value:n,label:r,attributes:a}=e;return(0,c.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>u.push(e),onKeyDown:p,onClick:h,...a,className:(0,i.Z)("tabs__item",o.tabItem,a?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function d(e){let{lazy:n,children:r,selectedValue:i}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,c.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function h(e){const n=(0,s.Y)(e);return(0,c.jsxs)("div",{className:(0,i.Z)("tabs-container",o.tabList),children:[(0,c.jsx)(u,{...n,...e}),(0,c.jsx)(d,{...n,...e})]})}function p(e){const n=(0,l.default)();return(0,c.jsx)(h,{...e,children:(0,s.h)(e.children)},String(n))}},70989:(e,n,r)=>{r.d(n,{Y:()=>p,h:()=>c});var t=r(67294),i=r(16550),a=r(20469),s=r(91980),l=r(67392),o=r(20812);function c(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:i}}=e;return{value:n,label:r,attributes:t,default:i}}))}(r);return function(e){const n=(0,l.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function d(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:r}=e;const a=(0,i.k6)(),l=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,s._X)(l),(0,t.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(a.location.search);n.set(l,e),a.replace({...a.location,search:n.toString()})}),[l,a])]}function p(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,s=u(e),[l,c]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[p,f]=h({queryString:r,groupId:i}),[m,g]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,o.Nk)(r);return[i,(0,t.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:i}),v=(()=>{const e=p??m;return d({value:e,tabValues:s})?e:null})();(0,a.Z)((()=>{v&&c(v)}),[v]);return{selectedValue:l,selectValue:(0,t.useCallback)((e=>{if(!d({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),f(e),g(e)}),[f,g,s]),tabValues:s}}},94618:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/verifiers-3e52decc7fbf68d9f256b86ae3e5664b.gif"},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>s});var t=r(67294);const i={},a=t.createContext(i);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);