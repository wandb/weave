"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2413],{102:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var i=t(85893),a=t(11151);const s={},o="DSPy",r={id:"guides/integrations/dspy",title:"DSPy",description:"DSPy is a framework for algorithmically optimizing LM prompts and weights, especially when LMs are used one or more times within a pipeline. Using the DSPy Weave integration, Weave will automatically track and log calls made using DSPy modules and functions.",source:"@site/docs/guides/integrations/dspy.md",sourceDirName:"guides/integrations",slug:"/guides/integrations/dspy",permalink:"/guides/integrations/dspy",draft:!1,unlisted:!1,editUrl:"https://github.com/wandb/weave/blob/master/docs/docs/guides/integrations/dspy.md",tags:[],version:"current",lastUpdatedAt:1756940028e3,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"LlamaIndex",permalink:"/guides/integrations/llamaindex"},next:{title:"Instructor",permalink:"/guides/integrations/instructor"}},l={},d=[{value:"Getting starting with tracing DSPy modules",id:"getting-starting-with-tracing-dspy-modules",level:2},{value:"Track your custom DSPy Modules and Signatures",id:"track-your-custom-dspy-modules-and-signatures",level:3},{value:"Evaluation of your DSPy Program",id:"evaluation-of-your-dspy-program",level:2},{value:"Compare evaluation runs",id:"compare-evaluation-runs",level:3},{value:"Optimization",id:"optimization",level:2},{value:"Bringing W&amp;B Models to track improvement of program signature",id:"bringing-wb-models-to-track-improvement-of-program-signature",level:3},{value:"FAQ",id:"faq",level:2},{value:"How can I reduce ingestion volume?",id:"how-can-i-reduce-ingestion-volume",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"dspy",children:"DSPy"}),"\n",(0,i.jsx)("a",{target:"_blank",href:"https://github.com/wandb/examples/blob/master/weave/docs/quickstart_dspy.ipynb",children:(0,i.jsx)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://dspy.ai/",children:"DSPy"})," is a framework for algorithmically optimizing LM prompts and weights, especially when LMs are used one or more times within a pipeline. Using the DSPy Weave integration, Weave will automatically track and log calls made using DSPy modules and functions."]}),"\n",(0,i.jsx)(n.admonition,{title:"Support for DSPy 3.x",type:"note",children:(0,i.jsx)(n.p,{children:"The DSPy Weave integration supports DSPy version 3.x. Features like Evaluation and Optimization are not supported for versions below 3.x."})}),"\n",(0,i.jsx)(n.h2,{id:"getting-starting-with-tracing-dspy-modules",children:"Getting starting with tracing DSPy modules"}),"\n",(0,i.jsx)(n.p,{children:"Storing traces of AI applications, both during development and in production, is useful for debugging, and building evaluation datasets that will help you improve your application iteratively."}),"\n",(0,i.jsxs)(n.p,{children:["Once initiated with ",(0,i.jsx)(n.code,{children:"weave.init()"}),", Weave will automatically capture traces for ",(0,i.jsx)(n.a,{href:"https://dspy.ai",children:"DSPy"}),". To run the example below, you need to install DSPy and Weave."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install dspy weave\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import os\nimport dspy\nimport weave\n\nos.environ["OPENAI_API_KEY"] = "<YOUR-OPENAI-API-KEY>"\n\n# Initialize Weave with your project name\n# highlight-next-line\nweave.init(project_name="dspy_demo")\n\n# Run your DSPy program as is\nlm = dspy.LM(\'openai/gpt-4o-mini\')\ndspy.configure(lm=lm)\nclassify = dspy.Predict("sentence -> sentiment")\nclassify(sentence="it\'s a charming and often affecting journey.")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"dspy_trace.png",src:t(95213).Z+"",width:"3456",height:"1982"})}),"\n",(0,i.jsx)(n.p,{children:"Weave logs all LM calls in your DSPy program, providing details about inputs, outputs, latency of each component, token counts, cost and more."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Learn how to navigate the trace for a given sample: ",(0,i.jsx)(n.a,{href:"/guides/tracking/trace-tree",children:"Navigate the Trace View"})]}),"\n",(0,i.jsxs)(n.li,{children:["Leave or review annotations on any call: ",(0,i.jsx)(n.a,{href:"/guides/tracking/feedback",children:"Feedback"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"track-your-custom-dspy-modules-and-signatures",children:"Track your custom DSPy Modules and Signatures"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"Module"})," is the building block for DSPy programs that abstracts a prompting technique with learnable parameters. A ",(0,i.jsx)(n.code,{children:"Signature"})," is a declarative specification of input/output behavior of a DSPy Module. Weave automatically tracks all in-built and custom Modules and Signatures in your DSPy programs."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import os\nimport dspy\nimport weave\n\nos.environ["OPENAI_API_KEY"] = "<YOUR-OPENAI-API-KEY>"\n\n# highlight-next-line\nweave.init(project_name="dspy_demo")\n\nlm = dspy.LM(\'openai/gpt-4o-mini\')\ndspy.configure(lm=lm)\n\nclass Outline(dspy.Signature):\n    """Outline a thorough overview of a topic."""\n\n    topic: str = dspy.InputField()\n    title: str = dspy.OutputField()\n    sections: list[str] = dspy.OutputField()\n    section_subheadings: dict[str, list[str]] = dspy.OutputField(\n        desc="mapping from section headings to subheadings"\n    )\n\n\nclass DraftSection(dspy.Signature):\n    """Draft a top-level section of an article."""\n\n    topic: str = dspy.InputField()\n    section_heading: str = dspy.InputField()\n    section_subheadings: list[str] = dspy.InputField()\n    content: str = dspy.OutputField(desc="markdown-formatted section")\n\n\nclass DraftArticle(dspy.Module):\n    def __init__(self):\n        self.build_outline = dspy.ChainOfThought(Outline)\n        self.draft_section = dspy.ChainOfThought(DraftSection)\n\n    def forward(self, topic):\n        outline = self.build_outline(topic=topic)\n        sections = []\n        for heading, subheadings in outline.section_subheadings.items():\n            section, subheadings = (\n                f"## {heading}",\n                [f"### {subheading}" for subheading in subheadings],\n            )\n            section = self.draft_section(\n                topic=outline.title,\n                section_heading=section,\n                section_subheadings=subheadings,\n            )\n            sections.append(section.content)\n        return dspy.Prediction(title=outline.title, sections=sections)\n\n\ndraft_article = DraftArticle()\narticle = draft_article(topic="World Cup 2002")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"dspy_custom_module.png",src:t(25565).Z+"",width:"3456",height:"1978"})}),"\n",(0,i.jsx)(n.h2,{id:"evaluation-of-your-dspy-program",children:"Evaluation of your DSPy Program"}),"\n",(0,i.jsxs)(n.p,{children:["When you run ",(0,i.jsx)(n.code,{children:"dspy.Evaluate"}),", Weave automatically logs:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Aggregated metrics and per-sample scores for the evaluation run"}),"\n",(0,i.jsx)(n.li,{children:"Per-sample inputs/outputs and full execution traces for deep debugging"}),"\n",(0,i.jsx)(n.li,{children:"Token usage, latency, and cost tracking"}),"\n",(0,i.jsx)(n.li,{children:"Model configuration and metadata for side-by-side comparisons"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Before running the below code sample, install this ",(0,i.jsx)(n.code,{children:"pip"})," package from ",(0,i.jsx)(n.code,{children:"hendrycks/math"})," on GitHub."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install git+https://github.com/hendrycks/math.git\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import os\nimport dspy\nfrom dspy.datasets import MATH\nimport weave\n\nos.environ["OPENAI_API_KEY"] = "<YOUR-OPENAI-API-KEY>"\n\n# highlight-next-line\nweave.init(project_name="dspy-test")\n\n# Configure LM and dataset\nlm = dspy.LM("openai/gpt-4o-mini", max_tokens=2000)\ndspy.configure(lm=lm)\ndataset = MATH(subset="algebra")\n\n# Define a simple module and evaluate it\nmodule = dspy.ChainOfThought("question -> answer")\nevaluate = dspy.Evaluate(\n    devset=dataset.dev[:2],\n    metric=dataset.metric,\n    num_threads=24,\n    display_progress=True,\n    return_all_scores=True,\n    return_outputs=True,\n    provide_traceback=True,\n    failure_score=0.0,\n)\n\nresult = evaluate(module)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["After the run completes, click on the generated Weave URL and navigate to ",(0,i.jsx)(n.strong,{children:"Evals"})," to see the evaluation summary, metrics, and per-sample rows. You can drill into any row to inspect the full trace and the artifacts that produced that output."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"dspy_eval.png",src:t(50359).Z+"",width:"3456",height:"1976"})}),"\n",(0,i.jsx)(n.h3,{id:"compare-evaluation-runs",children:"Compare evaluation runs"}),"\n",(0,i.jsx)(n.p,{children:"When viewing evaluation logs, Weave supports both holistic and sample-wise comparisons. Holistic compares aggregate metrics and model metadata across evaluation runs. Sample-wise allows you to page through different models and pipelines that run an evaluation using the same dataset to compare how they performed."}),"\n",(0,i.jsxs)(n.p,{children:["From the Evals tab, select multiple evals and click ",(0,i.jsx)(n.strong,{children:"Compare"}),". See ",(0,i.jsx)(n.a,{href:"/guides/evaluation/evaluation_logger#log-and-compare-multiple-evaluations",children:"EvaluationLogger (Comparisons section)"})," and the general ",(0,i.jsx)(n.a,{href:"/guides/tools/comparison",children:"Comparison"})," guide for details on the comparison UI and controls."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:(0,i.jsx)(n.img,{alt:"dspy_eval_comparison.png",src:t(35235).Z+"",width:"3456",height:"1984"})}),(0,i.jsx)(n.th,{children:(0,i.jsx)(n.img,{alt:"dspy_eval_comparison_samples.png",src:t(33747).Z+"",width:"3456",height:"1982"})})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Holistic comparison view"}),(0,i.jsx)(n.td,{children:"Sample-wise comparison view"})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"optimization",children:"Optimization"}),"\n",(0,i.jsxs)(n.p,{children:["DSPy features a powerful ",(0,i.jsx)(n.a,{href:"https://dspy.ai/learn/optimization/overview/",children:"optimization module"})," that helps tune the prompts or weights in your program. Using the DSPy Weave integration, Weave will log traces as you optimize to help you get more out of your optimization workflow."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import os\nimport dspy\nimport weave\nfrom dspy.datasets import MATH\n\nos.environ["OPENAI_API_KEY"] = "<YOUR-OPENAI-API-KEY>"\n\n# highlight-next-line\nweave.init(project_name="dspy-test")\n\nlm = dspy.LM(\'openai/gpt-4o-mini\', max_tokens=2000, cache=False)\ndspy.configure(lm=lm)\ndataset = MATH(subset="algebra")\n\ndef accuracy_metric(answer, output, trace=None):\n    predicted_answer = output["answer"].lower()\n    return answer["answer"].lower() == predicted_answer\n\nmodule = dspy.ChainOfThought("question -> answer: str, explanation: str")\noptimizer = dspy.BootstrapFewShot(metric=accuracy_metric)\noptimized_module = optimizer.compile(\n    module, trainset=dataset.train[:5]\n)\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"dspy_optimization.png",src:t(28802).Z+"",width:"3456",height:"1978"})}),"\n",(0,i.jsx)(n.h3,{id:"bringing-wb-models-to-track-improvement-of-program-signature",children:"Bringing W&B Models to track improvement of program signature"}),"\n",(0,i.jsxs)(n.p,{children:["For optimizers that use ",(0,i.jsx)(n.code,{children:"dspy.Evaluate"})," under the hood (ex: MIPROv2), you can optionally ",(0,i.jsxs)(n.a,{href:"https://docs.wandb.ai/guides/track/create-an-experiment/",children:["initialize a ",(0,i.jsx)(n.code,{children:"wandb"})," run"]})," which will log the evaluation metrics over time as a line chart and log the evolution of the program signature as ",(0,i.jsx)(n.a,{href:"https://docs.wandb.ai/guides/models/tables/",children:"W&B Tables"}),"."]}),"\n",(0,i.jsx)(n.admonition,{title:"This is an experimental feature",type:"info",children:(0,i.jsx)(n.p,{children:"Using both W&B Models and Weave to improve your DSPy optimization workflow is experimental."})}),"\n",(0,i.jsxs)(n.p,{children:["To use this feature first install the ",(0,i.jsx)(n.code,{children:"wandb"})," package."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install wandb\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from tkinter.constants import TRUE\nimport dspy\nfrom dspy.datasets import MATH\n\nimport weave\n# import wandb and the callback\n# highlight-next-line\nimport wandb\nfrom wandb.integration.dspy import WandbDSPyCallback\n\nwandb_project = \"dspy-eval-models\"\n\nweave.init(wandb_project)\nwandb.init(project=wandb_project)\n\n# add the callback as dspy settings\n# highlight-next-line\ndspy.settings.callbacks.append(WandbDSPyCallback())\n\ngpt4o_mini = dspy.LM('openai/gpt-4o-mini', max_tokens=2000)\ngpt4o = dspy.LM('openai/gpt-4o', max_tokens=2000, cache=True)\ndspy.configure(lm=gpt4o_mini)\n\ndataset = MATH(subset='algebra')\n\nmodule = dspy.ChainOfThought(\"question -> answer\")\n\nTHREADS = 24\n\noptimizer_kwargs = dict(\n    num_threads=THREADS, teacher_settings=dict(lm=gpt4o), prompt_model=gpt4o_mini\n)\noptimizer = dspy.MIPROv2(metric=dataset.metric, auto=\"light\", **optimizer_kwargs)\n\ncompile_kwargs = dict(requires_permission_to_run=False, max_bootstrapped_demos=2, max_labeled_demos=2)\noptimized_module = optimizer.compile(module, trainset=dataset.train, **compile_kwargs)\nprint(optimized_module)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Running this program will generate both W&B run and Weave URLs. You can click on the W&B run URL to view the logged metrics and the W&B Table. You can then click on the ",(0,i.jsx)(n.strong,{children:"Overview"})," tab of the run page to see the traces associated with the optimization run."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"dspy_models_weave.png",src:t(46633).Z+"",width:"3456",height:"1982"})}),"\n",(0,i.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,i.jsx)(n.h3,{id:"how-can-i-reduce-ingestion-volume",children:"How can I reduce ingestion volume?"}),"\n",(0,i.jsxs)(n.p,{children:["DSPy includes a verbose ",(0,i.jsx)(n.code,{children:"history"})," field in calls, which increases ingestion volume and slows logging traces when running evaluations and optimizations. To suppress the logging of ",(0,i.jsx)(n.code,{children:"history"})," fields in Weave, set the following environment variable before running your program:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export WEAVE_DSPY_HIDE_HISTORY=true\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},95213:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/dspy-trace-48e5889331fde851c2b6af0f66a05ee2.png"},25565:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/dspy_custom_module-33441fd119fc5d484f6d04ff8f4580cb.png"},50359:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/dspy_eval-1f15dc907db4b41aa670ef6ce0a9d9b2.png"},35235:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/dspy_eval_comparison-f9600ea3748902dca1d3a67515da6d3d.png"},33747:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/dspy_eval_comparison_samples-6f449a044e12254e19d37c580aa154ea.png"},46633:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/dspy_models_weave-35e5bae4c918b5fb3be146870b9a0436.png"},28802:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/dspy_optimization-f14bda26c93ee172f8f60b110230e89e.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var i=t(67294);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);