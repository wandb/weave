"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1612],{88791:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=t(85893),r=t(11151);const i={},a="Koog",s={id:"guides/integrations/koog",title:"Koog",description:"Koog is a Kotlin-based framework for building single-run and complex workflow agents. Koog includes built-in OpenTelemetry (OTEL) support and can export traces directly to Weave, giving you rich visibility into prompts, completions, tool calls, and end-to-end agent execution.",source:"@site/docs/guides/integrations/koog.md",sourceDirName:"guides/integrations",slug:"/guides/integrations/koog",permalink:"/guides/integrations/koog",draft:!1,unlisted:!1,editUrl:"https://github.com/wandb/weave/blob/master/docs/docs/guides/integrations/koog.md",tags:[],version:"current",lastUpdatedAt:1758102239e3,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Verdict",permalink:"/guides/integrations/verdict"},next:{title:"TypeScript SDK: Third-Party Integration Guide",permalink:"/guides/integrations/js"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install Koog (Gradle)",id:"install-koog-gradle",level:2},{value:"Enable Weave export (OpenTelemetry)",id:"enable-weave-export-opentelemetry",level:2},{value:"What gets traced",id:"what-gets-traced",level:2},{value:"Example notebook",id:"example-notebook",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"koog",children:"Koog"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://docs.koog.ai/",children:"Koog"})," is a Kotlin-based framework for building single-run and complex workflow agents. Koog includes built-in OpenTelemetry (OTEL) support and can export traces directly to Weave, giving you rich visibility into prompts, completions, tool calls, and end-to-end agent execution."]}),"\n",(0,o.jsx)(n.p,{children:"With the Weave exporter enabled, Koog forwards OpenTelemetry spans to your Weave project so you can debug, analyze performance, and iterate faster."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Koog",src:t(65754).Z+"",width:"3451",height:"1985"})}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(n.p,{children:"Set the following environment variables before running your agent:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'export WEAVE_API_KEY="<your-api-key>"\nexport WEAVE_ENTITY="<your-entity>"           # your W&B team/entity\nexport WEAVE_PROJECT_NAME="koog-tracing"      # any project name; created on first use\n'})}),"\n",(0,o.jsx)(n.h2,{id:"install-koog-gradle",children:"Install Koog (Gradle)"}),"\n",(0,o.jsx)(n.p,{children:"Add Koog to your Kotlin project (Kotlin DSL shown):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'dependencies {\n    implementation("ai.koog:koog-agents:LATEST_VERSION")\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["See Koog's documentation for ",(0,o.jsx)(n.a,{href:"https://docs.koog.ai/",children:"additional installation information"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"enable-weave-export-opentelemetry",children:"Enable Weave export (OpenTelemetry)"}),"\n",(0,o.jsx)(n.p,{children:"Install Koog\u2019s OpenTelemetry feature and add the Weave exporter. This maps Koog spans to Weave traces using Weave\u2019s OpenTelemetry endpoint."}),"\n",(0,o.jsxs)(n.p,{children:["The following example shows how to use the ",(0,o.jsx)(n.code,{children:"addWeaveExporter"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'fun main() = runBlocking {\n    val apiKey = "api-key"\n    val entity = System.getenv()["WEAVE_ENTITY"] ?: throw IllegalArgumentException("WEAVE_ENTITY is not set")\n    val projectName = System.getenv()["WEAVE_PROJECT_NAME"] ?: "koog-tracing"\n\n    val agent = AIAgent(\n        executor = simpleOpenAIExecutor(apiKey),\n        llmModel = OpenAIModels.CostOptimized.GPT4oMini,\n        systemPrompt = "You are a code assistant. Provide concise code examples."\n    ) {\n        install(OpenTelemetry) {\n            addWeaveExporter()\n        }\n    }\n\n    println("Running agent with Weave tracing")\n\n    val result = agent.run("""\n        Create a Python function to calculate fibonacci numbers efficiently,\n        include error handling, type hints, and unit tests.\n        Verify the implementation works for n=50.\n    """)\n\n    println("Result: $result\\nSee traces on https://wandb.ai/$entity/$projectName/weave/traces")\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The function automatically reads your Weave environment variables, but you can also configure ",(0,o.jsx)(n.a,{href:"https://api.koog.ai/agents/agents-features/agents-features-opentelemetry/ai.koog.agents.features.opentelemetry.integration.weave/add-weave-exporter.html?query=fun%20OpenTelemetryConfig.addWeaveExporter(weaveOtelBaseUrl:%20String?%20=%20null,%20weaveEntity:%20String?%20=%20null,%20weaveProjectName:%20String?%20=%20null,%20weaveApiKey:%20String?%20=%20null,%20timeout:%20Duration%20=%2010.seconds)",children:"specific parameters"})," for the exporter, like this:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'install(OpenTelemetry) {\n    addWeaveExporter(\n        weaveOtelBaseUrl = "https://trace.wandb.ai",\n        weaveEntity = System.getenv()["WEAVE_ENTITY"],\n        weaveProjectName = System.getenv()["WEAVE_PROJECT_NAME"],\n        weaveApiKey = System.getenv()["WEAVE_API_KEY"],\n        timeout = 10.seconds\n    )\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"The example above:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Uses ",(0,o.jsx)(n.code,{children:"weaveEntity"})," and ",(0,o.jsx)(n.code,{children:"weaveProjectName"})," to route traces to a specific team and project."]}),"\n",(0,o.jsxs)(n.li,{children:["Sets ",(0,o.jsx)(n.code,{children:"weaveOtelBaseUrl"})," to your trace endpoint (for example, ",(0,o.jsx)(n.code,{children:"https://<your-subdomain>.wandb.io/<path>"}),"). Use the parameter for dedicated Weave instances."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If you\u2019re new to using Koog with Weave, we recommend reviewing the following pieces of documentation:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://docs.koog.ai/opentelemetry-weave-exporter/",children:"Koog's Weave exporter guide"})," for additional information about the exporter"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://docs.koog.ai/opentelemetry-support/",children:"Koog's OpenTelemetry support guide"})," for core concepts about how OpenTelemetry works with Koog"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/guides/tracking/otel",children:"Weave OTEL docs"})," for information about how Weave ingests OTLP data"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"what-gets-traced",children:"What gets traced"}),"\n",(0,o.jsx)(n.p,{children:"When enabled, Koog\u2019s Weave exporter captures the same spans as Koog\u2019s general OTEL integration, including:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Agent lifecycle events (start, stop, errors)"}),"\n",(0,o.jsx)(n.li,{children:"LLM interactions (prompts, completions, token usage, latency)"}),"\n",(0,o.jsx)(n.li,{children:"Tool and API calls (function calls and external requests)"}),"\n",(0,o.jsx)(n.li,{children:"System context (model name, Koog version, environment metadata)"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You can visualize these traces in the Weave UI to understand performance and quality. See ",(0,o.jsx)(n.a,{href:"/guides/tracking/tracing",children:"Weave's tracing overview"})," for an introduction to capturing traces with Weave."]}),"\n",(0,o.jsx)(n.h2,{id:"example-notebook",children:"Example notebook"}),"\n",(0,o.jsxs)(n.p,{children:["See Koog's documentation for a ",(0,o.jsx)(n.a,{href:"https://docs.koog.ai/examples/Weave/",children:"runnable notebooks"})," that streams traces to Weave."]}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If traces are missing, first verify that ",(0,o.jsx)(n.code,{children:"WEAVE_API_KEY"}),", ",(0,o.jsx)(n.code,{children:"WEAVE_ENTITY"}),", and ",(0,o.jsx)(n.code,{children:"WEAVE_PROJECT_NAME"})," are set correctly."]}),"\n",(0,o.jsxs)(n.li,{children:["Confirm your environment can reach ",(0,o.jsx)(n.code,{children:"https://trace.wandb.ai"})," and that the exporter is configured as shown above."]}),"\n",(0,o.jsxs)(n.li,{children:["For additional troubleshooting and sampling guidance, see Koog\u2019s ",(0,o.jsx)(n.a,{href:"https://docs.koog.ai/opentelemetry-support/",children:"OpenTelemetry support"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},65754:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/koog-5111c59c9643a8e48efc20d4f9c0ca8f.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>a});var o=t(67294);const r={},i=o.createContext(r);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);