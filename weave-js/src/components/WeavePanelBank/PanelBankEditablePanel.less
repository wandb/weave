/*******************************
       EditablePanel.less
*******************************/

@import '@wandb/weave/common/css/globals.less';

// Scope to weave-root so we don't mess with W&B PanelBank styles.
.weave-root {
  .editable-panel {
    // TODO: Add transition for fading panels
    height: 100%;
    border: 1px solid transparent;
    border-radius: 6px;
    background-color: @white;
    transition: box-shadow 0.3s, margin-top 0.3s;
    padding: 8px;
    &.panel-highlighted {
      box-shadow: 0 0 0 4px @commentYellow;
    }
    &.panel-selected {
      border: 1px solid @primaryText !important;
    }
    cursor: default;
    &__content {
      box-sizing: border-box;
      padding-top: 18px;
      height: 100%;
      display: flex;
      flex-direction: column;
    }
    .react-resizable-handle::after {
      border-color: transparent;
    }

    .draggable-handle {
      i.icon {
        position: relative;
        top: -4px;
        margin: 0;
        pointer-events: none;
      }
      font-size: 24px;
      height: 16px;
      padding: 0;
      width: 100%;
      color: transparent;
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      cursor: grab;
      cursor: -moz-grab;
      cursor: -webkit-grab;
      display: block;
      text-align: center;
      z-index: 1;
      &:active {
        color: @darkBlue;
        // increase height to prevent cursor from changing
        // as panel moves slightly up
        height: 32px;
        cursor: grabbing;
        cursor: -webkit-grabbing;
        cursor: -moz-grabbing;
      }
    }
    &__actions {
      color: transparent;
      z-index: 100;
      position: absolute;
      top: 4px;
      right: 0px;
      display: flex;
      align-items: center;
      .dropdown.download .menu > .item {
        font-size: 0.8em;
        padding: 0.8rem !important;
      }
      .panel-comments {
        cursor: pointer;
        color: @gray700;
        background-color: @commentYellow;
        display: flex;
        align-items: center;
        padding: 0 4px;
        margin-right: 8px;
        border-radius: 12px;
        span {
          margin: 0 8px;
          font-size: 14px;
        }
      }
    }
    &:hover {
      .draggable-handle {
        color: @gray500;
        &:hover {
          color: @darkBlue;
        }
        &:active {
          color: @darkBlue;
          cursor: grabbing;
        }
      }
      .editable-panel__actions {
        color: @gray500;
      }
      .react-resizable-handle::after {
        border-color: initial;
      }
    }
    &.react-draggable-dragging {
      // transform: translateY(-80px);
      margin-top: -4px;
      box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.08);
      transition: box-shadow 0.3s, margin-top 0.3s;
      border-color: darken(@gray400, 5%);
      .draggable-handle {
        color: black;
      }
    }
  }
  .react-draggable-dragging .ui.compact.menu.ellipsis-menu,
  .resizing .ui.compact.menu.ellipsis-menu {
    z-index: 0; // disable menu while dragging+resizing plots
  }

  // This can be used between the panel header and panel content in
  // panel view mode, to render panel controls.
  .panel-header {
    display: flex;
    flex-wrap: wrap;
    padding-bottom: 4px;
    z-index: 4;
    margin: 0;
    font-size: 14px;
    align-items: center;
    flex-shrink: 0;
  }

  .panel-setting {
    &__item {
      display: flex;
      margin: @spu 0 @spu 0;
    }

    &__item--stacked {
      flex-direction: column;
    }

    &__toggle-label {
      margin-left: @spu;
    }
  }

  .ui.fullscreen .edit-mode.content {
    padding: 0px;

    .loader-wrapper {
      min-height: 400px;
      display: flex;
    }
  }

  .ui.fullscreen-mode.modal.panel-editor {
    flex-direction: column;
    display: flex !important;
    height: calc(90vh);
  }

  .ui.fullscreen.panel-editor .fullscreen-mode.content {
    padding: 12px;
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    flex-grow: 1;

    .chart {
      max-width: -webkit-fill-available;
      max-width: -moz-available;
      max-width: stretch;
    }
  }

  // For the Hint component in react-vis
  .rv-hint {
    background-color: transparent;

    padding: 1px 3px;
    .rv-hint__content {
      font-size: 12px;
      color: @gray700;
      box-shadow: none;
      border-radius: 2px;
      border: 1px solid #eee;
      background: white;
      white-space: nowrap;
      line-height: 150%;
      font-family: @fontName;

      .rv-hint__value {
        font-weight: bold;
      }
    }
  }
}
