export const COMPLETION_OP_NAMES = [
  'anthropic.Messages.create',
  'anthropic.AsyncMessages.create',
  'anthropic.Messages.stream',
  'anthropic.AsyncMessages.stream',
  'google.genai.models.Models.generate_content',
  'google.genai.models.AsyncModels.generate_content',
  'google.genai.models.Models.count_tokens',
  'google.genai.models.AsyncModels.count_tokens',
  'google.genai.chats.Chat.send_message',
  'google.genai.chats.AsyncChat.send_message',
  'google.genai.models.Models.generate_content_stream',
  'google.genai.models.AsyncModels.generate_content_stream',
  'BedrockRuntime.converse',
  'BedrockRuntime.invoke',
  'BedrockRuntime.converse_stream',
  'Instructor.create',
  'Instructor.create_with_completion',
  'AsyncInstructor.create',
  'Instructor.create_partial',
  'AsyncInstructor.create_partial',
  'litellm.completion',
  'litellm.acompletion',
  'cerebras.chat.completions.create',
  'AsyncCompletionsResource.create',
  'groq.chat.completions.create',
  'groq.async.chat.completions.create',
  'google.generativeai.GenerativeModel.generate_content',
  'google.generativeai.GenerativeModel.generate_content_async',
  'google.generativeai.ChatSession.send_message',
  'google.generativeai.ChatSession.send_message_async',
  'crewai.LLM.call',
  'openai.chat.completions.create',
  'openai.beta.chat.completions.parse',
  'openai.moderations.create',
  'openai.responses.create',
  'openai_agent_response',
  'openai_agent_generation',
  'GenerativeModel.generate_content',
  'GenerativeModel.generate_content_async',
  'ChatSession.send_message',
  'ChatSession.send_message_async',
  'huggingface_hub.InferenceClient.chat_completion',
  'huggingface_hub.AsyncInferenceClient.chat_completion',
  'huggingface_hub.InferenceClient.document_question_answering',
  'huggingface_hub.AsyncInferenceClient.document_question_answering',
  'huggingface_hub.InferenceClient.visual_question_answering',
  'huggingface_hub.AsyncInferenceClient.visual_question_answering',
  'huggingface_hub.InferenceClient.question_answering',
  'huggingface_hub.AsyncInferenceClient.question_answering',
  'huggingface_hub.InferenceClient.sentence_similarity',
  'huggingface_hub.AsyncInferenceClient.sentence_similarity',
  'huggingface_hub.InferenceClient.summarization',
  'huggingface_hub.AsyncInferenceClient.summarization',
  'huggingface_hub.InferenceClient.table_question_answering',
  'huggingface_hub.AsyncInferenceClient.table_question_answering',
  'huggingface_hub.InferenceClient.text_classification',
  'huggingface_hub.AsyncInferenceClient.text_classification',
  'huggingface_hub.InferenceClient.token_classification',
  'huggingface_hub.AsyncInferenceClient.token_classification',
  'huggingface_hub.InferenceClient.translation',
  'huggingface_hub.AsyncInferenceClient.translation',
  'huggingface_hub.InferenceClient.zero_shot_classification',
  'huggingface_hub.AsyncInferenceClient.zero_shot_classification',
  'completion',
  'cohere.AsyncClient.chat',
  'cohere.Client.chat_stream',
  'cohere.AsyncClient.chat_stream',
  'cohere.ClientV2.chat',
  'cohere.AsyncClientV2.chat',
  'cohere.ClientV2.chat_stream',
  'cohere.AsyncClientV2.chat_stream',
  'langchain_nvidia_ai_endpoints.ChatNVIDIA._generate',
  'langchain_nvidia_ai_endpoints.ChatNVIDIA._stream',
];

export const TOOL_OP_NAMES = [
  'notdiamond.custom_router.train_router',
  'notdiamond.custom_router.evaluate_router',
  'NotDiamond.amodel_select',
  'NotDiamond.model_select',
  'NotDiamond.LLMConfig.__init__',
  'NotDiamond.LLMConfig.from_string',
  'NotDiamond.toolkit.custom_router.fit',
  'NotDiamond.toolkit.custom_router.eval',
  'BedrockRuntime.apply_guardrail',
  'llama_index.query',
  'llama_index.exception',
  'mcp.server.fastmcp.FastMCP.call_tool',
  'mcp.server.fastmcp.FastMCP.read_resource',
  'mcp.server.fastmcp.FastMCP.list_tools',
  'mcp.server.fastmcp.FastMCP.list_resources',
  'mcp.server.fastmcp.FastMCP.tool',
  'mcp.server.fastmcp.FastMCP.resource',
  'mcp.server.fastmcp.FastMCP.prompt',
  'mcp.client.session.ClientSession.call_tool',
  'mcp.client.session.ClientSession.read_resource',
  'mcp.client.session.ClientSession.get_prompt',
  'mcp.client.session.ClientSession.list_tools',
  'mcp.client.session.ClientSession.list_resources',
  'mcp.client.session.ClientSession.list_prompts',
  'openai.embeddings.create',
  'instance.func',
  "inputs['self'].metric",
  'openai_agent_guardrail',
];

export const IMAGE_OP_NAMES = [
  'google.genai.models.Models.generate_images',
  'google.genai.models.AsyncModels.generate_images',
  'ImageGenerationModel.generate_images',
  'huggingface_hub.InferenceClient.fill_mask',
  'huggingface_hub.AsyncInferenceClient.fill_mask',
  'huggingface_hub.InferenceClient.text_to_image',
  'huggingface_hub.AsyncInferenceClient.text_to_image',
  'huggingface_hub.InferenceClient.image_to_image',
  'huggingface_hub.AsyncInferenceClient.image_to_image',
];

export const AGENT_OP_NAMES = [
  'crewai.Crew.kickoff',
  'crewai.Crew.kickoff_async',
  'crewai.Crew.kickoff_for_each',
  'crewai.Crew.kickoff_for_each_async',
  'crewai.Agent.execute_task',
  'crewai.Task.execute_sync',
  'crewai.Flow.kickoff',
  'crewai.Flow.kickoff_async',
  'crewai.flow.flow.start',
  'crewai.flow.flow.listen',
  'crewai.flow.flow.router',
  'crewai.flow.flow.or_',
  'crewai.flow.flow.and_',
  'openai_agent_trace',
  'openai_agent_agent',
  'openai_agent_handoff',
  'openai_agent_custom',
];
