[project]
name = "weave"
description = "A toolkit for building composable interactive data driven applications."
readme = "README.md"
license = { text = "Apache-2.0" }
maintainers = [{ name = "W&B", email = "support@wandb.com" }]
authors = [
  { name = "Shawn Lewis", email = "shawn@wandb.com" },
  { name = "Danny Goldstein", email = "danny@wandb.com" },
  { name = "Tim Sweeney", email = "tim@wandb.com" },
  { name = "Nick Peneranda", email = "nick.penaranda@wandb.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: Flask",
  "Framework :: Jupyter",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Topic :: Database :: Front-Ends",
  "Topic :: Office/Business :: Financial :: Spreadsheet",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Software Development :: Widget Sets",
]
requires-python = ">=3.9"
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.scripts]
weave = "weave.cli:cli"

[project.urls]
Company = "https://wandb.com"
Documentation = "https://docs.wandb.com/"
Changes = "https://github.com/wandb/weave/releases"
"Source Code" = "https://github.com/wandb/weave"
"Issue Tracker" = "https://github.com/wandb/weave/issues/"
Twitter = "https://twitter.com/weights_biases"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["weave"]

[tool.setuptools.dynamic]
version = { attr = "weave.version.VERSION" }
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.dynamic.optional-dependencies]
examples = { file = ["requirements.ecosystem.txt"] }
engine = { file = ["requirements.engine.txt"] }
ecosystem = { file = ["requirements.ecosystem.txt"] }
datadog = { file = ["requirements.datadog.txt"] }
modal = { file = ["requirements.modal.txt"] }

[tool.pytest.ini_options]
testpaths = ["weave"]
filterwarnings = ["error"]

[tool.ruff.lint]
preview = true
select = [
  "D200", # https://docs.astral.sh/ruff/rules/fits-on-one-line/
  "D201", # https://docs.astral.sh/ruff/rules/no-blank-line-before-function/
  "D202", # https://docs.astral.sh/ruff/rules/no-blank-line-after-function/
  "D204", # https://docs.astral.sh/ruff/rules/one-blank-line-after-class/
  "D210", # https://docs.astral.sh/ruff/rules/surrounding-whitespace/
  "D211", # https://docs.astral.sh/ruff/rules/blank-line-before-class/
  "D214", # https://docs.astral.sh/ruff/rules/section-not-over-indented/
  "FIX001", # https://beta.ruff.rs/docs/rules/#flake8-fixme-fix
  "FIX003",
  "F541",
  "I", # https://docs.astral.sh/ruff/rules/#isort-i
  "W291", # https://docs.astral.sh/ruff/rules/trailing-whitespace/
  "W391", # https://docs.astral.sh/ruff/rules/too-many-newlines-at-end-of-file/
]
ignore = [
  "D203", # https://docs.astral.sh/ruff/rules/one-blank-line-before-class/ - we use Google style
  "D206", # https://docs.astral.sh/ruff/rules/indent-with-spaces/ - redundant with formatter
  "D207", # https://docs.astral.sh/ruff/rules/under-indentation/ - redundant with formatter
  "D208", # https://docs.astral.sh/ruff/rules/over-indentation/ - redundant with formatter
  "D213", # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line/ - we use Google style
  "D215", # https://docs.astral.sh/ruff/rules/section-underline-not-over-indented/ - we use Google style
]
exclude = [
  "weave/api.py",
  "weave/__init__.py",
  "weave/legacy/**/*.py",
  "examples",
]

[tool.ruff.lint.isort]
known-third-party = ["wandb"]

[tool.ruff]
line-length = 88
show-fixes = true
exclude = [
  "weave/api.py",
  "weave/__init__.py",
  "weave/legacy/**/*.py",
  "examples",
]
