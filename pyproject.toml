[project]
name = "weave"
description = "A toolkit for building composable interactive data driven applications."
readme = "README.md"
license = { text = "Apache-2.0" }
maintainers = [{ name = "W&B", email = "support@wandb.com" }]
authors = [
  { name = "Shawn Lewis", email = "shawn@wandb.com" },
  { name = "Danny Goldstein", email = "danny@wandb.com" },
  { name = "Tim Sweeney", email = "tim@wandb.com" },
  { name = "Nick Peneranda", email = "nick.penaranda@wandb.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: Flask",
  "Framework :: Jupyter",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Topic :: Database :: Front-Ends",
  "Topic :: Office/Business :: Financial :: Spreadsheet",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Software Development :: Widget Sets",
]
requires-python = ">=3.9"
dynamic = ["version"]
dependencies = [
  "pydantic>=2.0.0",
  "wandb>=0.17.1",
  "analytics-python>=1.2.9", # Segment logging
  "python-dateutil>=2.8.2",  # For ISO date parsing
  "packaging>=21.0",         # For version parsing in integrations
  "tenacity>=8.3.0,!=8.4.0", # Excluding 8.4.0 because it had a bug on import of AsyncRetrying
  "emoji>=2.12.1",           # For emoji shortcode support in Feedback
  "uuid-utils>=0.9.0",       # Used for ID generation - remove once python's built-in uuid supports UUIDv7
  "numpy>1.21.0",
  "rich",

  # dependencies for remaining legacy code.  Remove when possible
  "httpx",
  "aiohttp",
  "gql",
  "requests_toolbelt",
]

[project.optional-dependencies]
trace_server = []
anthropic = ["anthropic>=0.18.0"]
cerebras = ["cerebras-cloud-sdk"]
cohere = ["cohere>=5.9.1,<5.9.3"]
dspy = ["dspy>=0.1.5"]
groq = ["groq>=0.9.0"]
instructor = ["instructor>=1.4.3"]
langchain = [
  "langchain-core>=0.2.1",
  "langchain-openai>=0.1.7",
  "langchain-community>=0.2.1",
  "chromadb>=0.5.0",
  "pysqlite3",
  "opentelemetry-exporter-otlp",
]
litellm = ["litellm>=1.36.1"]
llamaindex = ["llama-index>=0.10.35"]
mistral0 = ["mistralai>=0.1.8,<1.0.0"]
mistral1 = ["mistralai>=1.0.0"]
openai = ["openai>=1.0.0"]
modal = ["modal", "python-dotenv"]
test = [
  "nox",
  "pytest>=8.2.0",
  "pytest-asyncio>=0.23.6",
  "pytest-xdist>=3.1.0",
  "pytest-rerunfailures>=12.0",
  "clickhouse_connect==0.7.0",
  "fastapi>=0.110.0",
  "sqlparse==0.5.0",

  # Integration Tests
  "pytest-recording==0.13.1",
  "vcrpy==6.0.1",
  "semver==2.13.0",           # Used for switching logic based on package versions (should be replaced with packaging!)

  # serving tests
  "flask",
  "uvicorn>=0.27.0",
  "pillow",
  "filelock",
]

[project.scripts]
weave = "weave.trace.cli:cli"

[project.urls]
Company = "https://wandb.com"
Documentation = "https://docs.wandb.com/"
Changes = "https://github.com/wandb/weave/releases"
"Source Code" = "https://github.com/wandb/weave"
"Issue Tracker" = "https://github.com/wandb/weave/issues/"
Twitter = "https://twitter.com/weights_biases"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["weave"]

[tool.setuptools.dynamic]
version = { attr = "weave.version.VERSION" }

[tool.pytest.ini_options]
filterwarnings = [
  # treat warnings as errors
  # "error",
  # ignore deprecation warnings from installed packages, they're printed at the
  # bottom of test output, making it hard to find the actual errors.
  "ignore::DeprecationWarning",
]
addopts = "-v"
markers = [
  "skip_clickhouse_client: marks tests as requiring clickhouse client to be skipped",
  "weave_client: alias for `client` fixture used for CI dispatching. Do not use directly in code.",
  "disable_logging_error_check: means that the test expects logging errors (and the default assertion for no logging errors will fail)",
]

[tool.ruff.lint]
preview = true
select = [
  "D200",   # https://docs.astral.sh/ruff/rules/fits-on-one-line/
  "D201",   # https://docs.astral.sh/ruff/rules/no-blank-line-before-function/
  "D202",   # https://docs.astral.sh/ruff/rules/no-blank-line-after-function/
  "D204",   # https://docs.astral.sh/ruff/rules/one-blank-line-after-class/
  "D210",   # https://docs.astral.sh/ruff/rules/surrounding-whitespace/
  "D211",   # https://docs.astral.sh/ruff/rules/blank-line-before-class/
  "D214",   # https://docs.astral.sh/ruff/rules/section-not-over-indented/
  "FIX001", # https://beta.ruff.rs/docs/rules/#flake8-fixme-fix
  "FIX003", # https://docs.astral.sh/ruff/rules/line-contains-xxx/
  "F541",   # https://docs.astral.sh/ruff/rules/f-string-missing-placeholders/
  "I",      # https://docs.astral.sh/ruff/rules/#isort-i
  "W291",   # https://docs.astral.sh/ruff/rules/trailing-whitespace/
  "W391",   # https://docs.astral.sh/ruff/rules/too-many-newlines-at-end-of-file/
  "F401",   # https://docs.astral.sh/ruff/rules/unused-import/
]
ignore = [
  # we use Google style
  "D203", # https://docs.astral.sh/ruff/rules/one-blank-line-before-class/
  "D213", # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line/
  "D215", # https://docs.astral.sh/ruff/rules/section-underline-not-over-indented/
]
exclude = [
  "weave/api.py",
  "weave/__init__.py",
  "weave/legacy/**/*.py",
  "examples",
  "weave_query",
]

[tool.ruff.lint.isort]
known-third-party = ["wandb", "weave_query"]

[tool.ruff.lint.per-file-ignores]
"weave/tests/*" = ["F401"]
"weave/weave_server.py" = ["F401"]


[tool.ruff]
line-length = 88
show-fixes = true
exclude = [
  "weave/query_api.py",
  "weave/__init__.py",
  "weave/legacy/**/*.py",
  "examples",
  "weave_query",
]

[tool.mypy]
warn_unused_configs = true
exclude = [
  ".*pyi$",
  "weave_query",
  "weave/tests",
  "weave/trace_server/tests",
  "weave/conftest.py",
  "weave/trace/tests",
  "integration_test",
  "weave/trace_server/tests",
  "examples",
  "weave/docker",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "weave.*"
disallow_untyped_defs = true
disallow_untyped_calls = true

[[tool.mypy.overrides]]
module = "weave_query.*"
ignore_errors = true

[tool.bumpversion]
current_version = "0.51.13-dev0"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
  "{major}.{minor}.{patch}-{pre_l}{pre_n}",
  "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Release version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Release version: {current_version} → {new_version}"
commit_args = ""

[tool.bumpversion.parts.pre_l]
values = ["dev", "final"]
optional_value = "final"
