The following messages have 'previous_item_id'

Modify the item state management for inputs and responses so that given a particular item (input or response) we can construct the full timeline through a double linked list

E.g. Whenever we get a message where the previous_item_id is not none we should track that state in a linked list so we can get the next message for the previous item and the previous item for the current item.

Then update _build_message_input_payload to function properly


class ItemCreateMessage(ClientMessageBase):
    type: Literal["conversation.item.create"] = "conversation.item.create"
    previous_item_id: Optional[ItemID] = None
    item: ClientItem

class InputAudioBufferCommittedMessage(ServerMessageBase):
    """
    Signals the server has received and processed the audio buffer.
    """
    type: Literal["input_audio_buffer.committed"] = "input_audio_buffer.committed"
    previous_item_id: Optional[ItemID]  # Fixed type: was Optional[str]
    item_id: ItemID

class ItemCreatedMessage(ServerMessageBase):
    type: Literal["conversation.item.created"] = "conversation.item.created"
    previous_item_id: Optional[ItemID]  # Fixed type: was Optional[str]
    item: ServerItem  # Changed to use ServerItem which has required IDs

